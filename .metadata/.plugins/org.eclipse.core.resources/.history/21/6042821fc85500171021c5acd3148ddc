package com.isban.p064informclustergroupalphabetical.actions;

import com.isb.portlet.fw.annotation.ActionHandler;
import com.isb.portlet.fw.annotation.PortletHandler;
import com.isb.portlet.fw.base.BaseActionHandler;
import com.isb.portlet.fw.base.FrameworkUtils;
import com.isb.portlet.fw.base.Scope;
import com.isban.model.TipoPreferencia;
import com.isban.p064informclustergroupalphabetical.integration.P064InfoClusterGroupAlphabeticalServiceUtil;
import com.isban.p064informclustergroupalphabetical.keys.P064InfoClusterGroupAlphabeticalKey;
import com.isban.portales.utilidades.commons.keys.GenericConstants;
import com.liferay.portal.kernel.util.StringPool;

import java.util.List;
import java.util.Locale;

import javax.portlet.PortletException;
import javax.portlet.PortletPreferences;

import es.isban.portlets.util.PortalCommonUtil;

/**
 * Default action handler for MODE.EDIT
 */
@PortletHandler
public class P064InfoClusterGroupAlphabeticalEditAction extends BaseActionHandler {

	/**
	 * Default method handler for Mode.View
	 * 
	 * @return
	 * @throws PortletException
	 */
	@ActionHandler(action = P064InfoClusterGroupAlphabeticalKey.ACTION_P064INFOCLUSTERGROUPALPHABETICAL_EDIT)
	public String editPreferencesAction() throws PortletException {

		try {

			String prefParamVisual = getModelData(Scope.PARAMS, P064InfoClusterGroupAlphabeticalKey.PARAM_VISUAL,
					GenericConstants.CTE_EMPTY);

			PortletPreferences preferences = FrameworkUtils.getPreferences();
			preferences.setValue(P064InfoClusterGroupAlphabeticalKey.PREF_VISUAL, prefParamVisual);

			// RICHCOMBO AGRUPS
			String prefParamRCAgrup = StringPool.BLANK;
			String prefSelectValueRCIconoNotificaciones = getModelData(Scope.PARAMS,
					P064InfoClusterGroupAlphabeticalKey.RICHCOMBO_AGRUP_SELECT_ID);
			preferences.setValue(P064InfoClusterGroupAlphabeticalKey.LR_PREF_SELECT_VALUE_RICH_COMBO_AGRUP,
					prefSelectValueRCIconoNotificaciones);
			if (P064InfoClusterGroupAlphabeticalKey.RICHCOMBO_COMBO_OPTION_VALUE
					.equals(prefSelectValueRCIconoNotificaciones)) {
				prefParamRCAgrup = getModelData(Scope.PARAMS,
						P064InfoClusterGroupAlphabeticalKey.RICHCOMBO_AGRUP_SELECT_ACTION_ID,
						GenericConstants.CTE_EMPTY);
			} else if (P064InfoClusterGroupAlphabeticalKey.RICHCOMBO_INPUT_OPTION_VALUE
					.equals(prefSelectValueRCIconoNotificaciones)) {
				prefParamRCAgrup = getModelData(Scope.PARAMS,
						P064InfoClusterGroupAlphabeticalKey.RICHCOMBO_AGRUP_INPUT_ID, GenericConstants.CTE_EMPTY);
			}
			preferences.setValue(P064InfoClusterGroupAlphabeticalKey.LR_PREF_PARAM_VALUE_RICH_COMBO_AGRUP,
					prefParamRCAgrup);

			String prefParamRCBarra = StringPool.BLANK;
			String prefSelectValueRCEnlaceNotificacion = getModelData(Scope.PARAMS,
					P064InfoClusterGroupAlphabeticalKey.RICHCOMBO_BARRA_SELECT_ID);
			preferences.setValue(P064InfoClusterGroupAlphabeticalKey.LR_PREF_SELECT_VALUE_RICH_COMBO_BARRA,
					prefSelectValueRCEnlaceNotificacion);
			if (P064InfoClusterGroupAlphabeticalKey.RICHCOMBO_COMBO_OPTION_VALUE
					.equals(prefSelectValueRCEnlaceNotificacion)) {
				prefParamRCBarra = getModelData(Scope.PARAMS,
						P064InfoClusterGroupAlphabeticalKey.RICHCOMBO_BARRA_SELECT_ACTION_ID,
						GenericConstants.CTE_EMPTY);
			} else if (P064InfoClusterGroupAlphabeticalKey.RICHCOMBO_INPUT_OPTION_VALUE
					.equals(prefSelectValueRCEnlaceNotificacion)) {
				prefParamRCBarra = getModelData(Scope.PARAMS,
						P064InfoClusterGroupAlphabeticalKey.RICHCOMBO_BARRA_INPUT_ID, GenericConstants.CTE_EMPTY);
			}
			preferences.setValue(P064InfoClusterGroupAlphabeticalKey.LR_PREF_PARAM_VALUE_RICH_COMBO_BARRA,
					prefParamRCBarra);

			if (prefParamVisual.trim().equals(GenericConstants.CTE_EMPTY)) {
				setModelData(Scope.REQUEST, GenericConstants.MSG_ALLMANDATORYPREFS_NOTFILLED,
						GenericConstants.CTE_TRUE);
			} else {
				preferences.store();
				setModelData(Scope.REQUEST, P064InfoClusterGroupAlphabeticalKey.MSG_SAVESUCCESFULPREFERENCES,
						GenericConstants.CTE_TRUE);
			}

		} catch (Exception e) {
			FrameworkUtils.getLogger().error(GenericConstants.MSG_UNEXPECTEDERRORINPREFERENCES, e);
			FrameworkUtils.setModelData(Scope.REQUEST, GenericConstants.MSG_ERRORPREFERENCES,
					GenericConstants.CTE_TRUE);
		}

		return P064InfoClusterGroupAlphabeticalKey.RENDER_P064INFOCLUSTERGROUPALPHABETICAL_EDIT;
	}

	/**
	 * Action get agrups.
	 *
	 * @return the string
	 * @throws PortletException
	 *             the portlet exception
	 */
	@SuppressWarnings("unchecked")
	@ActionHandler(action = P064InfoClusterGroupAlphabeticalKey.ACTION_GET_AGRUPS)
	public String actionGetAgrups() throws PortletException {
		try {

			Locale currentLocale = FrameworkUtils.getLocale();
			String language = currentLocale.toString();
			String cacheKey = P064InfoClusterGroupAlphabeticalKey.CACHE_AGRUPLIST + language;

			String defaultValueSelectAction = getModelData(Scope.PARAMS,
					P064InfoClusterGroupAlphabeticalKey.DEFAULT_VALUE_ACTION);
			setModelData(Scope.REQUEST, P064InfoClusterGroupAlphabeticalKey.DEFAULT_VALUE_ACTION,
					defaultValueSelectAction);

			String defaultValueSelect = getModelData(Scope.PARAMS,
					P064InfoClusterGroupAlphabeticalKey.DEFAULT_VALUE_ID_RC_SELECT);
			setModelData(Scope.REQUEST, P064InfoClusterGroupAlphabeticalKey.PARAM_DEFAULT_RICH_COMBO_AGRUP_SELECT,
					defaultValueSelect);

			String defaultActionSelect = (String) getModelData(Scope.PARAMS,
					P064InfoClusterGroupAlphabeticalKey.DEFAULT_VALUE_ID_RC_ACTION_SELECT);
			setModelData(Scope.REQUEST, P064InfoClusterGroupAlphabeticalKey.DEFAULT_VALUE_ID_RC_ACTION_SELECT,
					defaultActionSelect);

			List<TipoPreferencia> preferencias = null;
			preferencias = (List<TipoPreferencia>) FrameworkUtils.getModelData(Scope.PORTLET_CACHE, cacheKey);

			if (preferencias == null || preferencias.size() == 0) {
				preferencias = P064InfoClusterGroupAlphabeticalServiceUtil.getLinkPreferencias(
						P064InfoClusterGroupAlphabeticalKey.PROPERTY_SUBTYPE_AGRUP, getCurrentSite(),
						PortalCommonUtil.getThemeDisplay(getRequest()));
				FrameworkUtils.setModelData(Scope.PORTLET_CACHE, cacheKey, preferencias);
			}
			setModelData(Scope.REQUEST, P064InfoClusterGroupAlphabeticalKey.BEANID_TIPO_PREF_DATA, preferencias);
			setModelData(Scope.REQUEST, P064InfoClusterGroupAlphabeticalKey.PARAM_STATUS_ACTION,
					P064InfoClusterGroupAlphabeticalKey.OK);
		} catch (Exception e) {
			FrameworkUtils.getLogger().error(e.getMessage(), e);
			setModelData(Scope.REQUEST, P064InfoClusterGroupAlphabeticalKey.PARAM_STATUS_ACTION,
					P064InfoClusterGroupAlphabeticalKey.ERR);
		}

		return getCurrentView();
	}

	/**
	 * Action get barras.
	 *
	 * @return the string
	 * @throws PortletException
	 *             the portlet exception
	 */
	@SuppressWarnings("unchecked")
	@ActionHandler(action = P064InfoClusterGroupAlphabeticalKey.ACTION_GET_BARRAS)
	public String actionGetBarras() throws PortletException {
		try {

			Locale currentLocale = FrameworkUtils.getLocale();
			String language = currentLocale.toString();
			String cacheKey = P064InfoClusterGroupAlphabeticalKey.CACHE_BARRALIST + language;

			String defaultValueSelectAction = getModelData(Scope.PARAMS,
					P064InfoClusterGroupAlphabeticalKey.DEFAULT_VALUE_ACTION);
			setModelData(Scope.REQUEST, P064InfoClusterGroupAlphabeticalKey.DEFAULT_VALUE_ACTION,
					defaultValueSelectAction);

			String defaultValueSelect = getModelData(Scope.PARAMS,
					P064InfoClusterGroupAlphabeticalKey.DEFAULT_VALUE_ID_RC_SELECT);
			setModelData(Scope.REQUEST, P064InfoClusterGroupAlphabeticalKey.PARAM_DEFAULT_RICH_COMBO_BARRA_SELECT,
					defaultValueSelect);

			String defaultActionSelect = (String) getModelData(Scope.PARAMS,
					P064InfoClusterGroupAlphabeticalKey.DEFAULT_VALUE_ID_RC_ACTION_SELECT);
			setModelData(Scope.REQUEST, P064InfoClusterGroupAlphabeticalKey.DEFAULT_VALUE_ID_RC_ACTION_SELECT,
					defaultActionSelect);

			List<TipoPreferencia> preferenciasBarra = null;
			preferenciasBarra = (List<TipoPreferencia>) FrameworkUtils.getModelData(Scope.PORTLET_CACHE, cacheKey);

			if (preferenciasBarra == null || preferenciasBarra.size() == 0) {
				preferenciasBarra = P064InfoClusterGroupAlphabeticalServiceUtil.getLinkPreferencias(
						P064InfoClusterGroupAlphabeticalKey.PROPERTY_SUBTYPE_ENLACE, getCurrentSite(),
						PortalCommonUtil.getThemeDisplay(getRequest()));
			}
			
			setModelData(Scope.REQUEST, P064InfoClusterGroupAlphabeticalKey.BEANID_TIPO_PREF_DATA, preferenciasBarra);
			setModelData(Scope.REQUEST, P064InfoClusterGroupAlphabeticalKey.PARAM_STATUS_ACTION,
					P064InfoClusterGroupAlphabeticalKey.OK);
		} catch (Exception e) {
			FrameworkUtils.getLogger().error(e.getMessage(), e);
			setModelData(Scope.REQUEST, P064InfoClusterGroupAlphabeticalKey.PARAM_STATUS_ACTION,
					P064InfoClusterGroupAlphabeticalKey.ERR);
		}

		return getCurrentView();
	}

}
